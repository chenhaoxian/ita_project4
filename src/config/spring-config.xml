<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="  
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd" > 
	<!-- data source : DriverManagerDataSource <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> 
		<property name="url" value="jdbc:oracle:thin:@ITA-031-W7:1521:XE"/> <property 
		name="username" value="chenhy"/> <property name="password" value="CHENHY"/> 
		</bean> -->
		
		<context:component-scan base-package="ita.project4.main.service"></context:component-scan>
		<context:component-scan base-package="ita.project4.main.dao"></context:component-scan>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@ZHA-ITA102-W7:1521:XE" />
		<property name="username" value="ita_g1_hyman" />
		<property name="password" value="chenhy" />
	</bean>
	
	
	<!-- 指定实现JPA的适配器，主要作用如下： 1、取代persistence.xml中的<provider> 2、指定方言 3、通知“entityManagerFactory”产生什么样的entityManager 
		4、还可以使用EclipseLinkJpaVendorAdapter(Toplink)，openJpaVendorAdapter -->
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="org.hibernate.dialect.OracleDialect" />
	</bean>


	<!-- JPA实体管理工厂的配置 使用@PersistenceContext会自动注入EntityManager,可以使用 @PersistenceUnit注入entityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="persistenceUnitName" value="un"></property><!-- 一个请求一个un，一个线程一个 -->
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="ita.project4.main.po" /><!--待扫描的实体类包，不再需要persistence.xml了 -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>


	<!-- Jpa 事务配置  -->
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!-- Spring Data Jpa配置 -->
	<!-- <jpa:repositories base-package="dao.impl" transaction-manager-ref="transactionManager" 
		entity-manager-factory-ref="entityManagerFactory"/> -->

	<!-- 对使用@Transactional的方法启用AOP proxy-target-class:表示是否对“目标类”启用代理。true:表示使用cglib方式(类)，false:表示使用Proxy方式（接口） -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	

</beans>